services:
  db:
    image: postgres:17
    container_name: postgres
    environment:
      TZ: Asia/Seoul
      POSTGRES_USER: nomadsquare
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: nomadsquare_db
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data # 개발데이터, 컨테이너 내 저장
      # - D:/NomadSquare/dockerData/dev/postgres:/var/lib/postgresql/data   # 개발 데이터 , 윈도우 저장
      - D:/NomadSquare/postgres/entrypoint:/docker-entrypoint-initdb.d:ro
      # - D:/NomadSquare/postgres/entrypoint/00_init.sql:/docker-entrypoint-initdb.d/00_init.sql
    restart: unless-stopped
    networks:
      - mynet

  web:
    build: ./nextjs
    container_name: nextjs
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_BASE=${NEXT_PUBLIC_API_BASE}
    depends_on: [api]
    networks: [mynet]

  api:
    build: ./springboot
    container_name: springboot
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - SERVER_FORWARD_HEADERS_STRATEGY=FRAMEWORK
    depends_on: [db]
    networks: [mynet]

  nginx:
    build: ./nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      TZ: Asia/Seoul
    depends_on: [web, api]
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro                # 전역 설정
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro     # http 컨텍스트용 include 파일
      - D:/NomadSquare/dockerData/dev/logs/nginx:/var/log/nginx    # 개발 로그
    restart: unless-stopped
    networks: [mynet]

volumes:
  db_data:

# 도커 네트워크 생성
# docker network create mynet
networks:
  mynet:
    driver: bridge

